[{"/Users/mati/Desktop/2011-SR-Phase/stackThone/stock-chaser/src/index.js":"1","/Users/mati/Desktop/2011-SR-Phase/stackThone/stock-chaser/src/App.jsx":"2","/Users/mati/Desktop/2011-SR-Phase/stackThone/stock-chaser/src/Components/Header.jsx":"3","/Users/mati/Desktop/2011-SR-Phase/stackThone/stock-chaser/src/Components/AddCoin.jsx":"4","/Users/mati/Desktop/2011-SR-Phase/stackThone/stock-chaser/src/pages/CoinSummary.js":"5","/Users/mati/Desktop/2011-SR-Phase/stackThone/stock-chaser/src/Components/CoinList.jsx":"6","/Users/mati/Desktop/2011-SR-Phase/stackThone/stock-chaser/src/apis/CoinApi.js":"7","/Users/mati/Desktop/2011-SR-Phase/stackThone/stock-chaser/src/context/watchList.js":"8","/Users/mati/Desktop/2011-SR-Phase/stackThone/stock-chaser/src/Components/CoinCard.js":"9","/Users/mati/Desktop/2011-SR-Phase/stackThone/stock-chaser/src/pages/CoinDetail.jsx":"10","/Users/mati/Desktop/2011-SR-Phase/stackThone/stock-chaser/src/Components/CoinData.js":"11","/Users/mati/Desktop/2011-SR-Phase/stackThone/stock-chaser/src/Components/CoinChart.js":"12","/Users/mati/Desktop/2011-SR-Phase/stackThone/stock-chaser/src/charFile/ChartSetUp.js":"13"},{"size":140,"mtime":1611365214240,"results":"14","hashOfConfig":"15"},{"size":1169,"mtime":1611626431039,"results":"16","hashOfConfig":"15"},{"size":541,"mtime":1611645904388,"results":"17","hashOfConfig":"15"},{"size":1692,"mtime":1611681715406,"results":"18","hashOfConfig":"15"},{"size":334,"mtime":1611448658459,"results":"19","hashOfConfig":"15"},{"size":1753,"mtime":1611646422204,"results":"20","hashOfConfig":"15"},{"size":160,"mtime":1611378862678,"results":"21","hashOfConfig":"15"},{"size":1286,"mtime":1611607791472,"results":"22","hashOfConfig":"15"},{"size":1352,"mtime":1611628609495,"results":"23","hashOfConfig":"15"},{"size":2479,"mtime":1611607956773,"results":"24","hashOfConfig":"15"},{"size":2159,"mtime":1611642008238,"results":"25","hashOfConfig":"15"},{"size":3505,"mtime":1611642064704,"results":"26","hashOfConfig":"15"},{"size":361,"mtime":1611636224204,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"sf6f74",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"/Users/mati/Desktop/2011-SR-Phase/stackThone/stock-chaser/src/index.js",[],["60","61"],"/Users/mati/Desktop/2011-SR-Phase/stackThone/stock-chaser/src/App.jsx",[],"/Users/mati/Desktop/2011-SR-Phase/stackThone/stock-chaser/src/Components/Header.jsx",["62","63","64"],"import React from 'react';\nimport { Link, Redirect, Route } from 'react-router-dom';\nimport Typed from 'react-typed';\n//💸 💰 💸 💰 💸 💰 💸 💰  🏃 🏃 🏃 🏃 🏃 :watch: :grinning:\nconst Header = (props) => {\n  console.log('this is props', props);\n  return (\n    <div>\n      <h1 className=\"text-center text-warning mt-3 mb-4\">\n        <Typed\n          className=\"typed_text\"\n          strings={['Coin Chaser']}\n          typeSpeed={40}\n          loop\n        />\n      </h1>\n    </div>\n  );\n};\n\nexport default Header;\n","/Users/mati/Desktop/2011-SR-Phase/stackThone/stock-chaser/src/Components/AddCoin.jsx",["65","66"],"import React, { useContext, useEffect, useState } from 'react';\nimport { WatchList } from '../context/watchList';\n// import CoinApi from '../apis/CoinApi'\n\nconst AddCoin = () => {\n  const [isActive, setIsActive] = useState(false);\n  const { addCoin } = useContext(WatchList);\n//   make sure to come back and use an api to generate all coins that should be available...\n\n  // const availableCoinsForNOww = async () => {\n  //   const response = await CoinApi.get(\"/coins/list\")\n  //   console.log(\"this is all data\", response.data)\n  //   return \n  // }\n\n  const availableCoinsForNOw = [\n    'bitcoin',\n    'ethereum',\n    'ripple',\n    'tether',\n    'stellar',\n    'litecoin',\n    'polkadot',\n    'cardano',\n    'bitcoin-cash',\n    'uniswap',\n    'celsius',\n    'eos',\n    'tron',\n    'veChain',\n    'monero',\n  ];\n  const clickHandler = (coin) => {\n    addCoin(coin);\n    setIsActive(false)\n  };\n  return (\n    <div class=\"dropdown\">\n      <button\n        onClick={() => setIsActive(!isActive)}\n        className=\"btn btn-secondary dropdown-toggle\"\n        type=\"button\"\n        id=\"dropdownMenuButton\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n      >\n        + Coin\n      </button>\n      <div\n        className={isActive ? 'dropdown-menu show' : 'dropdown-menu'}\n        aria-labelledby=\"dropdownMenuButton\"\n      >\n        {availableCoinsForNOw.map((coin) => {\n          return (\n            <a\n              onClick={() => clickHandler(coin)}\n              className=\"dropdown-item\"\n              href=\"#\"\n            >\n              {coin}\n            </a>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default AddCoin;\n","/Users/mati/Desktop/2011-SR-Phase/stackThone/stock-chaser/src/pages/CoinSummary.js",[],"/Users/mati/Desktop/2011-SR-Phase/stackThone/stock-chaser/src/Components/CoinList.jsx",[],"/Users/mati/Desktop/2011-SR-Phase/stackThone/stock-chaser/src/apis/CoinApi.js",[],"/Users/mati/Desktop/2011-SR-Phase/stackThone/stock-chaser/src/context/watchList.js",[],"/Users/mati/Desktop/2011-SR-Phase/stackThone/stock-chaser/src/Components/CoinCard.js",[],"/Users/mati/Desktop/2011-SR-Phase/stackThone/stock-chaser/src/pages/CoinDetail.jsx",["67","68"],"import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport CoinData from '../Components/CoinData';\nimport CoinChart from '../Components/CoinChart';\nimport axios from 'axios';\nimport CoinApi from '../apis/CoinApi';\n\nconst CoinDetail = () => {\n  const { id } = useParams();\n  //our date is stored in coinData => make sure to passe it down to the chart component...\n  const [coinData, setCoinData] = useState({});\n  const [isLoading, setIsloading] = useState(false);\n\n  const formatData = (data) => {\n    return data.map((item) => {\n      return {\n          // t is for x axes and y is for y axes\n        t: item[0],\n        y: item[1].toFixed(2),\n      };\n    });\n  };\n  useEffect(() => {\n    const fetchDate = async () => {\n      setIsloading(true);\n      const [\n        oneDayResult,\n        oneWeekResult,\n        oneYearResult,\n        fiveYearsResult,\n        coinDetail,\n      ] = await Promise.all([\n        CoinApi.get(`/coins/${id}/market_chart/`, {\n          params: {\n            vs_currency: 'usd',\n            days: '1',\n          },\n        }),\n        CoinApi.get(`/coins/${id}/market_chart/`, {\n          params: {\n            vs_currency: 'usd',\n            days: '7',\n          },\n        }),\n        CoinApi.get(`/coins/${id}/market_chart/`, {\n          params: {\n            vs_currency: 'usd',\n            days: '365',\n          },\n        }),\n        CoinApi.get(`/coins/${id}/market_chart/`, {\n          params: {\n            vs_currency: 'usd',\n            days: '1825',\n          },\n        }),\n        // this is our route for detail for the specific coin\n        CoinApi.get('/coins/markets', {\n          params: {\n            vs_currency: 'usd',\n            ids: id,\n          },\n        }),\n      ]);\n    //   console.log('this is a day of data', oneDayResult);\n      setCoinData({\n        day: formatData(oneDayResult.data.prices),\n        week: formatData(oneWeekResult.data.prices),\n        year: formatData(oneYearResult.data.prices),\n        fiveYears: formatData(fiveYearsResult.data.prices),\n        detail: coinDetail.data[0],\n      });\n      setIsloading(false);\n    };\n    fetchDate();\n  }, []);\n\n  const renderData = () => {\n    if (isLoading) {\n      return <div>Loading....</div>;\n    }\n    return (\n      <div className=\"coinlist\">\n        <CoinChart data={coinData}/>\n        <CoinData data={coinData.detail}/>\n      </div>\n    );\n  };\n  return renderData();\n};\n\nexport default CoinDetail;\n","/Users/mati/Desktop/2011-SR-Phase/stackThone/stock-chaser/src/Components/CoinData.js",[],"/Users/mati/Desktop/2011-SR-Phase/stackThone/stock-chaser/src/Components/CoinChart.js",["69"],"import React, { useEffect, useRef, useState } from 'react';\nimport Chart from 'chart.js';\nimport { timeLineOptions } from '../charFile/ChartSetUp';\nimport { useHistory } from 'react-router-dom';\n\nfunction CoinChart({ data }) {\n  // random color generator\n  const chartGraphColorGenerator = () => {\n    let x = Math.floor(Math.random() * 256);\n    let y = Math.floor(Math.random() * 256);\n    let z = Math.floor(Math.random() * 256);\n    return 'rgb(' + x + ',' + y + ',' + z + ')';\n  };\n  const chartReference = useRef();\n  const { day, week, year, fiveYears, detail } = data;\n  const [timeFormat, setTimeFormat] = useState('day');\n\n  const chooseTimeFormat = () => {\n    switch (timeFormat) {\n      case 'day':\n        return day;\n      case 'week':\n        return week;\n      case 'year':\n        return year;\n      case 'fiveYears':\n        return fiveYears;\n      default:\n        return day;\n    }\n  };\n\n  useEffect(() => {\n    //is\n    if (chartReference && chartReference.current && detail) {\n      const chartInstance = new Chart(chartReference.current, {\n        type: 'line',\n        data: {\n          //Bring in data\n          datasets: [\n            {\n              label: `${detail.name} Price`,\n              data: chooseTimeFormat(),\n              backgroundColor: `${chartGraphColorGenerator()}`,\n              borderColor: `${chartGraphColorGenerator()}`,\n              pointRadius: 0,\n            },\n          ],\n        },\n        options: {\n          ...timeLineOptions,\n        },\n      });\n    }\n  });\n  const history = useHistory();\n\n  ///this reDi\n  const routeChangeToHome = () => {\n    let path = `/`;\n    history.push(path);\n  };\n  const renderPrice = () => {\n    if (detail) {\n      return (\n        <div>\n          <p className=\"bg-white my-0\">${detail.current_price.toFixed(2)}</p>\n          <p\n            className={\n              detail.price_change_24h < 0\n                ? 'text-danger my-0'\n                : 'text-success my-0'\n            }\n          >\n            {detail.price_change_percentage_24h.toFixed(2)}%\n          </p>\n        </div>\n      );\n    }\n  };\n\n  return (\n    //everyTime we want to reference the canvas chart we just call the useRef\n    <div className=\"bg-lightblue border mt-2 round p-3\">\n      <div>{renderPrice()}</div>\n      <div>\n        <canvas\n          ref={chartReference}\n          id=\"myChart\"\n          width={250}\n          height={250}\n        ></canvas>\n      </div>\n      <div className=\"bg-white row-md-6\">\n        <button\n          type=\"button\"\n          className=\"btn form-control\"\n          id=\"btn1\"\n          onClick={() => setTimeFormat('day')}\n        >\n          Day\n        </button>{' '}\n        <button\n          type=\"button\"\n          className=\"btn form-control\"\n          id=\"btn2\"\n          onClick={() => setTimeFormat('week')}\n        >\n          Week\n        </button>{' '}\n        <button\n          type=\"button\"\n          className=\"btn form-control\"\n          id=\"btn3\"\n          onClick={() => setTimeFormat('year')}\n        >\n          Year\n        </button>{' '}\n        <button\n          type=\"button\"\n          className=\"btn form-control\"\n          id=\"btn4\"\n          onClick={() => setTimeFormat('fiveYears')}\n        >\n          5Years\n        </button>\n        <button\n          type=\"button\"\n          className=\"bg-red form-control\"\n          id=\"btn5\"\n          onClick={routeChangeToHome}\n        >\n          HOME\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default CoinChart;\n","/Users/mati/Desktop/2011-SR-Phase/stackThone/stock-chaser/src/charFile/ChartSetUp.js",[],["70","71"],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":2,"column":10,"nodeType":"78","messageId":"79","endLine":2,"endColumn":14},{"ruleId":"76","severity":1,"message":"80","line":2,"column":16,"nodeType":"78","messageId":"79","endLine":2,"endColumn":24},{"ruleId":"76","severity":1,"message":"81","line":2,"column":26,"nodeType":"78","messageId":"79","endLine":2,"endColumn":31},{"ruleId":"76","severity":1,"message":"82","line":1,"column":29,"nodeType":"78","messageId":"79","endLine":1,"endColumn":38},{"ruleId":"83","severity":1,"message":"84","line":56,"column":13,"nodeType":"85","endLine":60,"endColumn":14},{"ruleId":"76","severity":1,"message":"86","line":5,"column":8,"nodeType":"78","messageId":"79","endLine":5,"endColumn":13},{"ruleId":"87","severity":1,"message":"88","line":76,"column":6,"nodeType":"89","endLine":76,"endColumn":8,"suggestions":"90"},{"ruleId":"76","severity":1,"message":"91","line":36,"column":13,"nodeType":"78","messageId":"79","endLine":36,"endColumn":26},{"ruleId":"72","replacedBy":"92"},{"ruleId":"74","replacedBy":"93"},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'Route' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'axios' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["96"],"'chartInstance' is assigned a value but never used.",["94"],["95"],"no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},"Update the dependencies array to be: [id]",{"range":"99","text":"100"},[2175,2177],"[id]"]